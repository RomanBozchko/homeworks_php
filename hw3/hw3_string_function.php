<?php//Работа с регистром символов//1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.$i = 'Privet, mir!';echo strtoupper($i);echo "<br><br>";//2. Дана строка 'PHP'. Сделайте из нее строку 'php'.$j = 'PHP';echo strtolower($j);echo "<br><br>";//3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.$s = 'moskva';echo ucfirst($s);echo "<br><br>";//4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'./$x = 'MOSKVA';echo ucfirst(strtolower($x));echo "<br><br>";//5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.$a = 'ivanov ivan ivanovich';echo ucwords($a);echo "<br><br>";//Работа с strlen, substr//6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.$b = 'ja uchu php';echo strlen($b);echo "<br><br>";//7. Дана строка 'я учу PHP!'. Вырежете из нее слово 'учу' и слово 'PHP'.$c = 'ja uchu php';echo substr($c, 3, 4) . '<br>';echo substr($c, 8, 3);echo "<br><br>";//8. Дана переменная $str, в которой хранится какой­либо текст.//Реализуйте обрезание длинного текста по следующему принципу://если количество символов этого текста больше заданного в//переменной $n, то в переменную $result запишем первые $n//символов строки $str и добавим в конец многоточие '...'. В//противном случае в переменную $result запишем содержимое//переменной $str.$n = 8;$str = 'ja uchu php';$len_str = strlen($str);if ($len_str > $n) {    $result = substr_replace($str, '...', $n);    echo $result;} else {    $result = $str;    echo $result;}echo '<br><br>';//9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество//символов в пароле.function isprime($a){    if ($a == 1) {        return false;    }    for ($i = 2; $i * $i <= $a; $i++) {        if ($a % $i == 0) {            return false;        }    }    return true;}function password($n){    $arr = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',        'u', 'v', 'w', 'x', 'y', 'z', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);    $password = [];    for ($i = 0; $i < $n; $i++) {        $element = mt_rand(0, 35);        $rand = mt_rand(0, 100);        if (isprime($rand) && is_string($arr[$element])) {            $password[$i] = strtoupper($arr[$element]);        } else {            $password[$i] = $arr[$element];        }    }    return implode('', $password);}echo '<br><br>';//10. Создайте переменную $password. Присвойте переменной $password результат функции из предыдущего примера. Если//количество символов пароля больше 5­ти и меньше 10­ти, то выведите пользователю сообщение о том, что пароль подходит,//иначе сообщение о том, что нужно придумать другой пароль.$password = password(7);$count = strlen($password);if ($count > 5 && $count < 10) {    echo $password . ' отличный пароль';} elseif ($count <= 5) {    echo 'Пароль слишком короткий';} elseif ($count >= 10) {    echo 'Пароль слишком длинный';}echo '<br><br>';//11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент//пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное//количество символов). Подсказка: воспользуйтесь функциями strlen и substr.//xxxxxxxxxx//xxxxxxxxx//xxxxxxxx//xxxxxxx//xxxxxx$_str = 'ja_uchu_php';$str_count = strlen($_str);for($i = $str_count; $i > 0; $i--){    echo substr($_str, -$i) . '<br>';}echo '<br><br>';//Работа с str_replace//12. Дана строка 'Я­учу­PHP!'. Замените все дефисы на тег//'<br>'.$string = 'Я-учу-PHP!';echo htmlspecialchars(str_replace('-', '<br>', $string)). '<br><br>';//13. Дана строка '31.12.2013'. Замените все точки на дефисы.$date = '31.12.2013';$date_1 = str_replace('.', '-', $date);echo $date_1;echo '<br><br>';//14. Дана строка $str. Замените смайлики ':)', ':(', '^­^',//которые встречаются в этой строке на соответсвующие картинки//(<img src=''>).$str_2 = ':), :(, ^­^';$str_2 = str_replace(':)', "<img src='http://img2.wikia.nocookie.net/__cb20130627100903/warframe/ru/images/5/51/%D0%A1%D0%BC%D0%B0%D0%B9%D0%BB.png'>", $str_2);$str_2 = str_replace(':(', "<img src='http://img1.wikia.nocookie.net/__cb20140420114726/absurdopedia/images/b/bf/%D0%93%D1%80%D1%83%D1%81%D1%82%D0%BD%D1%8B%D0%B9_%D1%81%D0%BC%D0%B0%D0%B9%D0%BB%D0%B8%D0%BA.jpg'>", $str_2);$str_2 = str_replace('^­^', "<img src='http://smailiki.ucoz.net/_ph/9/2/778493955.gif'>", $str_2);echo $str_2;echo '<br><br>';//15. Дана переменная $str, в которой хранится строка русского//текста. Напишите скрипт, который запишет транслит этого текста//в переменную $translit. Напишите также скрипт, который//выполнит обратную операцию.$ru = array('а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф',    'х', 'ц', 'ч', 'ш', 'щ', 'ы', 'э', 'ю', 'я');$en = array( 'a', 'b', 'v', 'g', 'd', 'e', 'yo', 'zh', 'z', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u',    'f', 'h', 'c', 'ch', 'sh', 'shh', 'y', 'e', 'yu', 'ya');$str_3 = 'я учу пхп';$str_4 = 'ya uchu php';$str_5 = str_replace($ru, $en, $str_3);$str_6 = str_replace($en, $ru, $str_4);echo $str_5 . '<br>' . $str_6 . '<br><br>';//Работа с explode, implode//16. Дана строка 'я учу PHP!'. С помощью функции explode//запишите каждое слово этой строки в отдельный элемент массива.$str_7 = 'я учу PHP';$arr_1 = explode(" ", $str_7);print_r($arr_1);echo '<br><br>';//17. Дан массив с элементами . С помощью функции implode создайте строку из этих элементов,//разделенных запятыми.$arr_2 = ['html', 'css', 'php', 'js'];$arr_3 = implode(", ", $arr_2);print_r($arr_3);echo '<br><br>';//18. В переменной $date лежит дата в формате '2013­12­31'.//Преобразуйте эту дату в формат '31.12.2013'.$date = '2013-12-31';$date = explode("-", $date);$date = implode(".", $date);echo $date;echo '<br><br>';//19. В переменной $date лежит дата в формате '31.12.2013'.//Преобразуйте эту дату в формат '2013­12­31'.$date = '2013.12.31';$date = explode(".", $date);$date = implode("-", $date);echo $date;echo '<br><br>';//Работа с trim, ltrim, rtrim//20. Дана строка ' php '. Сделайте из нее 3 разных строки с//помощью функций класса trim: 'php', ' php', 'php '.$str_8 = ' php ';echo ',' . trim($str_8) . ',' . rtrim($str_8) . ',' . ltrim($str_8) . ',<br><br>';//Работа с strip_tags и htmlspecialchars//21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.$str_9 = 'html, <b>php</b>, js';echo strip_tags($str_9) . '<br><br>';//22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран//'как есть': то есть браузер не должен преобразовать <b> в жирный.$str_9 = 'html, <b>php</b>, js';echo htmlspecialchars($str_9) . '<br><br>';//Работа с chr и ord//23. Узнайте код символов 'a', 'b', 'c', пробела.echo ord('a') . ', ' . ord('b') . ', ' . ord('c') . ', ' . ord(' ') . '<br><br>';//24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран//символ с кодом 33.echo chr(33) . '<br><br>';//25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII//определите какие целые числа соответствуют большим буквам латинского алфавита.$str_10 = chr(65);echo $str_10 . '<br><br>';//26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка://воспользуйтесь циклом for или while.$len = 10;$str_11 = "";for($i = 1; $i <= $len; $i++){    $num = mt_rand(97, 122);    $str_11 .= chr($num);}echo $str_11 . '<br><br>';//Работа с substr_count, str_word_count, str_split//27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.$str_12 = 'Mama myla ramu';$str_12 = strtolower($str_12);$count_a = substr_count($str_12, 'a');$count_m = substr_count($str_12, 'm');echo 'Количество букв а: ' . $count_a . ', количество букв м: ' . $count_m . '<br><br>';//28. Скопируйте весь текст со страницы php.su, запишите его в//переменную $str. Подсчитайте количество символов и количество слов в даннной строке.$str_13 = 'ASCII developed from telegraphic codes. Its first commercial use was as a seven-bit teleprinter code promoted by Bell data services. Work on the ASCII standard began on October 6, 1960, with the first meeting of the American Standards Association subcommittee. The first edition of the standard was published during 1963, a major revisionduring 1967, and the most recent update during 1986. Compared to earlier telegraph codes, theproposed Bell code and ASCII were both ordered for more convenient sorting (i.e., alphabetization) of lists, and addedfeatures for devices other than teleprinters.';$work = str_word_count($str_13);$str_13_array = str_split($str_13);$str_count = count($str_13_array);echo $work . '<br>';echo $str_count . '<br><br>';//29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат//представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.$glasnye = ['a', 'e', 'i', 'o', 'u', 'y'];$count_array = count($glasnye);$str_14 = strtolower($str_13);$count_glasnye = [];for ($i = 0; $i < $count_array; $i++) {    $count_glasnye[$glasnye[$i]] = substr_count($str_14, $glasnye[$i]);}print_r($count_glasnye);echo '<br><br>';//30. Дана строка '1234567890'. Разбейте ее на массив с//элементами '12', '34', '56', '78', '90'.$str_15 = '1234567890';$dooble = str_split($str_15, 2);print_r($dooble);echo '<br><br>';//Работа с str_repeat, strrev//31. Проверьте, является ли пара слов палиндромом (одинаково//читается во всех направлениях, кот­ток, нос­сон).$kot = 'kot';$tok = 'tok';if ($kot == strrev($tok)) {    echo 'Слова палиндромы';} else {    echo 'Слова не палиндромы';}echo '<br><br>';//32. Дан массив $arr. Найдите в нем все пары слов­палиндромов//(одинаково читаются во всех направлениях, кот­ток, нос­сон).//Результат выводите в виде строка формата 'нос — сон'.//Проверьте работу скрипта на массиве $arr из примера. Совет://нужно сделать не один, а два цикла.//$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir',//    'mir','son', 'rim');$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir', 'son', 'rim');$count_arr = count($arr);for ($i = 0; $i < $count_arr; $i++) {    for ($j = 0; $j < $count_arr; $j++) {        if ($arr[$i] == strrev($arr[$j])) {            echo $arr[$i] . ' - ' . $arr[$j] . '<br>';        }    }}echo '<br><br>';//33. Определите является ли фраза палиндромом. Примеры: 'A roza, upala - na lapu Asora'. Обратите внимание на то, что при//обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку//к стандартному виду — удалить лишние символы, привести все к нижнему регистру).$str = 'A roza upala, na lapu Azora';$str = strtolower($str);$str = str_replace(" ", "", $str);$str = str_replace("-", "", $str);$str = str_replace(",", "", $str);$revers = strrev($str);if ($str == $revers) {    echo 'Фраза палиндром';} else {    echo 'Фраза не палиндром';}echo '<br><br>';//34. Нарисуйте пирамиду, как показано на рисунке, только у//вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с//помощью одного цикла и функции str_repeat.//x//xx//xxx//xxxx//xxxxx$str = 'x';for($i = 1; $i <= 9; $i++){    echo str_repeat($str, $i) . '<br>';}echo '<br><br>';//35. Нарисуйте пирамиду, как показано на рисунке, только у//вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с//помощью одного цикла и функции str_repeat.//1//22//333//4444//55555for($i = 1; $i <= 9; $i++){    echo str_repeat($i, $i) . '<br>';}